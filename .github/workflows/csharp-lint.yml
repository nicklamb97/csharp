name: CSharp File Linting on Main

on:
  push:
    branches:
      - main
    paths:
      - '**.cs'

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Get changed files
      id: changed-files
      run: |
        changed_files=$(git diff --name-only HEAD^ HEAD | grep '\.cs$' || true)
        if [ -z "$changed_files" ]; then
          echo "No .cs files changed"
          exit 0
        fi
        echo "files=$changed_files" >> $GITHUB_OUTPUT

    - name: Create temp project and run dotnet format
      if: steps.changed-files.outputs.files
      run: |
        dotnet new console -n TempProject
        cd TempProject
        rm Program.cs
        for file in ${{ steps.changed-files.outputs.files }}; do
          cp "../$file" .
          dotnet format --verify-no-changes --include $(basename $file)
        done

    - name: Configure StyleCop
      if: steps.changed-files.outputs.files
      run: |
        cd TempProject
        echo '{
          "$schema": "https://raw.githubusercontent.com/DotNetAnalyzers/StyleCopAnalyzers/master/StyleCop.Analyzers/StyleCop.Analyzers/Settings/stylecop.schema.json",
          "settings": {
            "documentationRules": {
              "companyName": "YourCompany"
            }
          }
        }' > stylecop.json
        echo '<Project>
          <PropertyGroup>
            <GenerateDocumentationFile>true</GenerateDocumentationFile>
            <NoWarn>$(NoWarn),1591,SA1633</NoWarn>
          </PropertyGroup>
        </Project>' > Directory.Build.props

    - name: Run StyleCop
      if: steps.changed-files.outputs.files
      run: |
        cd TempProject
        dotnet add package StyleCop.Analyzers
        dotnet build /p:TreatWarningsAsErrors=true
